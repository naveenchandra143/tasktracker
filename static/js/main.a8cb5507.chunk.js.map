{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8cb5507.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\nconst Button = ({color,text,onClick}) => {\r\n    return( \r\n       <button style={{backgroundColor: color}}\r\n        className='btn' onClick={onClick}>\r\n            {text}\r\n        </button>)\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text : PropTypes.string,\r\n    color : PropTypes.string,\r\n    onClick : PropTypes.func\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\nimport {useLocation } from 'react-router-dom'\r\n\r\nconst Header = ({title,onAdd,showAdd}) => {\r\n    const location = useLocation()\r\n    return (\r\n        <header className='header'>\r\n           <h1>{title}</h1> \r\n          {location.pathname ==='/' && <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd}/>}\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: \"Task Tracker\"\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n/*css in js\r\nconst headingStyle = {\r\n    color: 'red',backgroundColor: 'black'\r\n}*/\r\n\r\nexport default Header\r\n","import {FaTimes} from 'react-icons/fa'\r\nconst Task = ({task,onDelete,onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => {onToggle(task.id)}}>\r\n            <h3>{task.text} <FaTimes style={{color:\"red\",cursor:\"pointer\"}} onClick={() => onDelete(task.id)}/></h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\nconst Tasks = ({tasks,onDelete,onToggle}) => {\r\n    return (\r\n            <>\r\n              {tasks.map((task,index) => (\r\n                     <Task  key={index} task={task} onDelete={onDelete} onToggle={onToggle}/>\r\n             ))}\r\n            </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import {useState} from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text,setText] = useState('')\r\n    const [day,setDay] = useState('')\r\n    const [reminder,setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(!text) {\r\n            alert('please ass a task')\r\n            return\r\n        }\r\n        onAdd({text,day,reminder})\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className=\"form-control\">\r\n                <label>Task</label>\r\n                <input type=\"text\" placeholder=\"Add Task\"\r\n                  value={text} onChange={(e) => setText(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label>Day & Time</label>\r\n                <input type=\"text\" placeholder=\"Add Day & Time\"\r\n                  value={day} onChange={(e) => setDay(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"form-control form-control-check\">\r\n                <label>Set Reminder</label>\r\n                <input type=\"checkbox\" checked={reminder}\r\n                  value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}\r\n                />\r\n            </div>\r\n            <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import {Link} from 'react-router-dom'\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n            <Link to='/about'>About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import {Link} from 'react-router-dom'\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <Link to=\"/\">Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\nimport {BrowserRouter as Router,Route} from 'react-router-dom'\nimport {useState,useEffect} from 'react'\n\nfunction App() {\n  const [showAddTask,setShowAddTask] = useState(false)\n  const [tasks,setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async() => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n     getTasks()\n  }, [])\n\n  //fetch tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n    return data\n  }\n\n  //fetch task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n    return data\n  }\n\n//Add Task\nconst addTask = async (task) => {\n  const res = await fetch('http://localhost:5000/tasks',{\n    method: 'POST',\n    headers: {\n      'Content-type' : 'application/json'\n    },\n    body: JSON.stringify(task) \n  })\n\n  const data = await res.json()\n\n  setTasks([...tasks,data])\n   //const id = Math.floor(Math.random() * 10000) + 1\n   //const newTask = {id,...task}\n   //setTasks([...tasks,newTask])\n}\n\n//delete task\nconst deleteTask = async (id) => {\n  await fetch(`http://localhost:5000/tasks/${id}`,{\n    method: 'DELETE'\n  })\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n//toggle reminder\nconst toggleReminder = async(id) => {\n   const taskToToggle = await fetchTask(id)\n   const updTask = {...taskToToggle,\n  reminder: !taskToToggle.reminder}\n\n  const res = await fetch(`http://localhost:5000/tasks/${id}`,{\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(updTask)\n  })\n\n  const data = await res.json()\n\n  setTasks(tasks.map((task) => task.id === id ? {...task,reminder: data.reminder} : task))\n}\n\n  return (\n    <Router>\n        <div className=\"container\">\n         <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n         <Route path='/' exact render={(props)=>(\n           <>\n            {showAddTask && <AddTask onAdd ={addTask}/>}\n            {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/> : 'No Task to show'}\n           </>\n         )}/>\n         <Route path='/about' component={About}/>\n         <Footer/>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}